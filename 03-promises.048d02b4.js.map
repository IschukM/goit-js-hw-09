{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,eAEpBG,EAAO,CAAEJ,WAAUC,c,GAEpBA,E,0BA1CMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAON,IALA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OAASD,OAAOH,EAAKI,OAC1CC,EAAI,EAAGA,EAAIJ,EAAOG,MAAOC,GAAK,EAAG,CACxC,IAAMC,EAAWD,EAAI,EACrBH,GAA0BC,OAAOH,EAAKI,OACtCtB,EAAcwB,EAAUJ,GACrBK,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAUwB,EAAVxB,WACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAiB6B,OAAX5B,EAAW,MACjD,CAAA6B,QAAS,K,IAKdC,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAUwB,EAAVxB,WAClByB,EAAA7B,GAAS8B,OAAOK,QACd,sBAAqCH,OAAf7B,EAAS,QAAiB6B,OAAX5B,EAAW,MAChD,CAAE6B,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let totalDelay = Number(delay.value) - Number(step.value);\n  for (let i = 0; i < amount.value; i += 1) {\n    const position = i + 1;\n    totalDelay = totalDelay + Number(step.value);\n    createPromise(position, totalDelay)\n      .then(({ position, totalDelay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${totalDelay}ms`,\n          { timeout: 4000 }\n        );\n\n        // console.log(`✅ Fulfilled promise ${position} in ${totalDelay}ms`);\n      })\n      .catch(({ position, totalDelay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${totalDelay}ms`,\n          { timeout: 4000 }\n        );\n      });\n  }\n}\n\nfunction createPromise(position, totalDelay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, totalDelay });\n      } else {\n        reject({ position, totalDelay });\n      }\n    }, totalDelay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","totalDelay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","totalDelay1","Number","value","i","position1","then","param","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.048d02b4.js.map"}